{"ast":null,"code":"var _jsxFileName = \"/home/admin1/Documents/work stuff/TrainingTask/src/components/Task.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport logo from \"../logo.svg\";\nimport \"./Task.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Task() {\n  _s();\n\n  const [data, setData] = useState([{\n    id: 1,\n    name: \"Home\",\n    childrens: []\n  }, {\n    id: 2,\n    name: \"About\",\n    childrens: []\n  }]); // const handleClick = (id) => {\n  //   const previousData = [...data];\n  //   if (id === 1) {\n  //     previousData[1].childrens = [];\n  //     previousData[0].childrens = [\n  //       { id: 1, name: \"Home Submenu 1\" },\n  //       { id: 2, name: \"Home Submenu 2\" },\n  //     ];\n  //     setData(previousData);\n  //   }\n  //   if (id === 2) {\n  //     previousData[0].childrens = [];\n  //     previousData[1].childrens = [\n  //       { id: 1, name: \"About Submenu 1\" },\n  //       { id: 2, name: \"About Submenu 2\" },\n  //     ];\n  //     setData(previousData);\n  //   }\n  // };\n\n  const MouseOver = id => {\n    console.log('mouse over', id);\n    const previousData = [...data];\n\n    if (id === 1) {\n      previousData[1].childrens = [];\n      previousData[0].childrens = [{\n        id: 1,\n        name: \"Home Mousehover 1\"\n      }, {\n        id: 2,\n        name: \"Home Mousehover 2\"\n      }];\n      setData(previousData);\n    }\n\n    if (id === 2) {\n      previousData[0].childrens = [];\n      previousData[1].childrens = [{\n        id: 1,\n        name: \"About Mousehover 1\"\n      }, {\n        id: 2,\n        name: \"About Mousehover 2\"\n      }];\n      setData(previousData);\n    }\n  };\n\n  const MouseOut = () => () => {\n    console.log('mouse out');\n    const previousData = [...data];\n    previousData[0] = [];\n    previousData[1] = [];\n  };\n\n  console.log(data, \"data\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"maindiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 22\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu\",\n          onMouseEnter: () => MouseOver(item.id),\n          onMouseLeave: MouseOut(),\n          children: [data && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 24\n          }, this), item.childrens && item.childrens.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: item.childrens.map(innerItem => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: innerItem.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 26\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Task, \"6FgHAHcv/vH8F7JhOFA7oBc65J8=\");\n\n_c = Task;\nexport default Task; // arrow function is myfunc = () => {}\n//for stop rerendering you do myfunc = () => () =>{} or  {() => myfunc()}\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["/home/admin1/Documents/work stuff/TrainingTask/src/components/Task.js"],"names":["React","useState","Task","data","setData","id","name","childrens","MouseOver","console","log","previousData","MouseOut","logo","map","item","length","innerItem"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport logo from '../logo.svg';\nimport \"./Task.css\"\n\nfunction Task() {\n  const [data, setData] = useState([\n    { id: 1, name: \"Home\", childrens: [] },\n    { id: 2, name: \"About\", childrens: [] },\n  ]);\n\n  // const handleClick = (id) => {\n  //   const previousData = [...data];\n  //   if (id === 1) {\n  //     previousData[1].childrens = [];\n  //     previousData[0].childrens = [\n  //       { id: 1, name: \"Home Submenu 1\" },\n  //       { id: 2, name: \"Home Submenu 2\" },\n  //     ];\n  //     setData(previousData);\n  //   }\n  //   if (id === 2) {\n  //     previousData[0].childrens = [];\n  //     previousData[1].childrens = [\n  //       { id: 1, name: \"About Submenu 1\" },\n  //       { id: 2, name: \"About Submenu 2\" },\n  //     ];\n  //     setData(previousData);\n  //   }\n  // };\n\n  const MouseOver = (id) => {\n    console.log('mouse over', id)\n    const previousData = [...data];\n    if (id === 1) {\n      previousData[1].childrens = [];\n      previousData[0].childrens = [\n        { id: 1, name: \"Home Mousehover 1\" },\n        { id: 2, name: \"Home Mousehover 2\" },\n      ];\n      setData(previousData);\n    }\n    if (id === 2) {\n      previousData[0].childrens = [];\n      previousData[1].childrens = [\n        { id: 1, name: \"About Mousehover 1\" },\n        { id: 2, name: \"About Mousehover 2\" },\n      ];\n      setData(previousData);\n    }\n  };\n  const MouseOut = () => () => {\n    console.log('mouse out')\n    const previousData = [...data];\n    previousData[0] = [];\n    previousData[1] = [];\n  };\n  console.log(data, \"data\");\n\n  return (\n    <div className = \"maindiv\">\n                <div><img src={logo} className=\"App-logo\" alt=\"logo\" /> </div>\n      <div>\n        {data.map((item) => (\n          <div>\n\n            {/* <button classname=\"button\" onClick={() => handleClick(item.id)}>\n              {item.name}\n            </button> */}\n            <div className = \"menu\" onMouseEnter={() => MouseOver(item.id)} onMouseLeave={MouseOut()}>\n              {data && <span>{item.name}</span>}\n              {item.childrens && item.childrens.length > 0 && (\n              <div>\n                {item.childrens.map((innerItem) => {\n                  return <li>{innerItem.name}</li>;\n                })}\n              </div>\n            )}\n            </div>\n\n          </div>\n        ))}\n      </div>\n      \n    </div>\n  );\n}\nexport default Task;\n// arrow function is myfunc = () => {}\n//for stop rerendering you do myfunc = () => () =>{} or  {() => myfunc()}"]},"metadata":{},"sourceType":"module"}